<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-25T12:33:10 IST" name="Suite" finished-at="2022-11-25T12:34:15 IST" duration-ms="64130">
    <groups>
      <group name="ErrorValidation">
        <method signature="TestCase3.loginErrorValidation()[pri:0, instance:scripts.TestCase3@242b836]" name="loginErrorValidation" class="scripts.TestCase3"/>
      </group> <!-- ErrorValidation -->
    </groups>
    <test started-at="2022-11-25T12:33:10 IST" name="Test" finished-at="2022-11-25T12:34:15 IST" duration-ms="64130">
      <class name="scripts.TestCase1">
        <test-method is-config="true" signature="lounchApplication()[pri:0, instance:scripts.TestCase1@f0da945]" started-at="2022-11-25T12:33:10 IST" name="lounchApplication" finished-at="2022-11-25T12:33:32 IST" duration-ms="21427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lounchApplication -->
        <test-method signature="BuyOneProduct()[pri:0, instance:scripts.TestCase1@f0da945]" started-at="2022-11-25T12:33:32 IST" name="BuyOneProduct" finished-at="2022-11-25T12:33:40 IST" duration-ms="8380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BuyOneProduct -->
        <test-method is-config="true" signature="Close()[pri:0, instance:scripts.TestCase1@f0da945]" started-at="2022-11-25T12:33:40 IST" name="Close" finished-at="2022-11-25T12:33:42 IST" duration-ms="1304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Close -->
      </class> <!-- scripts.TestCase1 -->
      <class name="scripts.TestCase2">
        <test-method is-config="true" signature="lounchApplication()[pri:0, instance:scripts.TestCase2@2d52216b]" started-at="2022-11-25T12:33:42 IST" name="lounchApplication" finished-at="2022-11-25T12:33:48 IST" duration-ms="6054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lounchApplication -->
        <test-method signature="BuyMultipleProduct(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:scripts.TestCase2@2d52216b]" started-at="2022-11-25T12:33:48 IST" name="BuyMultipleProduct" data-provider="getData" finished-at="2022-11-25T12:33:53 IST" duration-ms="4841" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sk7anwar@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sk@133642]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[IPHONE 13 PRO]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BuyMultipleProduct -->
        <test-method is-config="true" signature="Close()[pri:0, instance:scripts.TestCase2@2d52216b]" started-at="2022-11-25T12:33:53 IST" name="Close" finished-at="2022-11-25T12:33:53 IST" duration-ms="569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Close -->
        <test-method is-config="true" signature="lounchApplication()[pri:0, instance:scripts.TestCase2@2d52216b]" started-at="2022-11-25T12:33:53 IST" name="lounchApplication" finished-at="2022-11-25T12:34:00 IST" duration-ms="7188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lounchApplication -->
        <test-method signature="BuyMultipleProduct(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:scripts.TestCase2@2d52216b]" started-at="2022-11-25T12:34:00 IST" name="BuyMultipleProduct" data-provider="getData" finished-at="2022-11-25T12:34:05 IST" duration-ms="4827" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sk7anwar@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sk@133642]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ADIDAS ORIGINAL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BuyMultipleProduct -->
        <test-method is-config="true" signature="Close()[pri:0, instance:scripts.TestCase2@2d52216b]" started-at="2022-11-25T12:34:05 IST" name="Close" finished-at="2022-11-25T12:34:06 IST" duration-ms="495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Close -->
      </class> <!-- scripts.TestCase2 -->
      <class name="scripts.TestCase3">
        <test-method is-config="true" signature="lounchApplication()[pri:0, instance:scripts.TestCase3@242b836]" started-at="2022-11-25T12:34:06 IST" name="lounchApplication" finished-at="2022-11-25T12:34:12 IST" duration-ms="6444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lounchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:scripts.TestCase3@242b836]" started-at="2022-11-25T12:34:12 IST" name="loginErrorValidation" finished-at="2022-11-25T12:34:13 IST" duration-ms="996" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at scripts.TestCase3.loginErrorValidation(TestCase3.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="Close()[pri:0, instance:scripts.TestCase3@242b836]" started-at="2022-11-25T12:34:14 IST" name="Close" finished-at="2022-11-25T12:34:15 IST" duration-ms="428" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Close -->
      </class> <!-- scripts.TestCase3 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
